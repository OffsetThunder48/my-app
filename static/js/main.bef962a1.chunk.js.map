{"version":3,"sources":["Users/UserModel.js","store/actions/actions.js","Users/Users.js","User/User.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["StyledP","styled","p","StyledDiv","div","StyledDiv2","StyledButton","button","styles","textDecoration","color","wrapper","props","userId","id","title","style","key","to","pathname","state","likes","dislikes","onClick","onLikeAdded","onLikeRemoved","onDislikeAdded","onDislikeRemoved","fetchUsers","dispatch","axios","get","then","res","users","data","map","user","body","forEach","console","log","type","catch","err","Users","this","onFetchUsers","Component","connect","isLoading","errors","actionTypes","User","onFetchUser","location","className","is","fetchUser","App","spinner","path","exact","component","Boolean","window","hostname","match","intitialState","reducer","payload","Object","assign","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bef962a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom'; \r\n\r\nconst StyledP = styled.p`\r\n    color: white;\r\n    text-align: center;\r\n    border-bottom: 1px;\r\n    border-bottom-style: solid;\r\n    border-bottom-color: white;\r\n    padding: 5px;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n    display: inline-block;\r\n    width: 31%;\r\n    height: auto;\r\n    margin: 1%;\r\n    overflow: auto;\r\n    background-color: teal;\r\n`;\r\n\r\nconst StyledDiv2 = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    margin: 10px auto;\r\n    background-color: white;\r\n    font-weight: bolder;\r\n    fonst-size: x-large;\r\n    color: teal;\r\n    width: 20%;\r\n    padding: 5px;\r\n    outline: 0;\r\n    border: 0px;\r\n`;\r\n\r\nconst styles = {\r\n    textDecoration: 'none',\r\n    color: 'white'\r\n}\r\n\r\nconst wrapper = (props) => {\r\n    return <StyledDiv>\r\n                <StyledP>{props.userId}</StyledP>\r\n                <StyledP>{props.id}</StyledP>\r\n                <StyledP>{props.title}</StyledP>\r\n                <StyledP><Link style={styles} key={props.id} to={{pathname: '/users/' + props.id, state: props.id}}>Click for more Details</Link></StyledP>\r\n                <StyledP>{props.likes} | {props.dislikes}</StyledP>\r\n                <StyledDiv2>\r\n                    <StyledButton onClick={props.onLikeAdded}>Add Like</StyledButton>\r\n                    <StyledButton onClick={props.onLikeRemoved}>Remove Like</StyledButton>\r\n                    <StyledButton onClick={props.onDislikeAdded}>Add Dislike</StyledButton>\r\n                    <StyledButton onClick={props.onDislikeRemoved}>Remove Dislike</StyledButton>\r\n                </StyledDiv2>\r\n            </StyledDiv>\r\n}\r\n\r\nexport default wrapper;","import axios from 'axios';\r\n\r\nexport const ADD_LIKE = 'ADD_LIKE';\r\nexport const REMOVE_LIKE = 'REMOVE_LIKE';\r\nexport const ADD_DISLIKE = 'ADD_DISLIKE';\r\nexport const REMOVE_DISLIKE = 'REMOVE_DISLIKE';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const SET_USER = 'SET_USER';\r\n\r\nexport const setUsers = (users) => {\r\n    console.log(users);\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: SET_USER,\r\n        user: user\r\n    }\r\n}\r\n\r\nexport const addLikeToUser = (user) => {\r\n    console.log(user);\r\n    return {\r\n        type: ADD_LIKE,\r\n        user: user\r\n    }\r\n}\r\n\r\nexport const fetchUsers = () => {\r\n    return dispatch => {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts').then(\r\n          res => {\r\n            res.data.map(user => ({\r\n            userId: `${user.userId}`,\r\n            id: `${user.id}`,\r\n            title: `${user.title}`,\r\n            body: `${user.body}`,\r\n            }));\r\n            res.data.forEach(user => {\r\n                user.likes = 500\r\n                user.dislikes = 100\r\n            })\r\n            dispatch(setUsers(res.data))\r\n        }\r\n    ).catch(err => console.log(err)) \r\n    }\r\n}\r\n\r\nexport const fetchUser = (id) => {\r\n    return dispatch => {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts/' + id).then(\r\n            res => dispatch(setUser(res.data))\r\n        ).catch(err => console.log(err))\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Wrapper from './UserModel';\r\nimport * as actionTypes from '../store/actions/actions';\r\n\r\nclass Users extends Component {\r\n      componentDidMount() {\r\n        console.log(this.props.user);\r\n        this.props.onFetchUsers();\r\n      }\r\n\r\n    render() {\r\n        const users = this.props.users.map(user =>\r\n        <Wrapper\r\n            key={user.id}\r\n            id={user.id} \r\n            userId={user.userId}\r\n            title={user.title} \r\n            user={user}\r\n            likes={user.likes}\r\n            dislikes={user.dislikes}\r\n            onDislikeAdded={() => this.props.onDislikeAdded(user)}\r\n            onDislikeRemoved = {() => this.props.onDislikeRemoved(user)}\r\n            onLikeAdded={()=>this.props.onLikeAdded(user)}\r\n            onLikeRemoved={() => this.props.onLikeRemoved(user)} />);\r\n        return users;                        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        isLoading: state.isLoading,\r\n        user: state.user,\r\n        errors: null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLikeAdded: (user) => dispatch({type: actionTypes.ADD_LIKE, user}),\r\n        onLikeRemoved: (user) => dispatch({type: actionTypes.REMOVE_LIKE, user}),\r\n        onDislikeAdded: (user) => dispatch({type: actionTypes.ADD_DISLIKE, user}),\r\n        onDislikeRemoved: (user) => dispatch({type: actionTypes.REMOVE_DISLIKE, user}),\r\n        onFetchUsers: () => dispatch(actionTypes.fetchUsers())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './User.css';\r\nimport { fetchUser} from '../store/actions/actions';\r\n\r\nconst StyledDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 40vw;\r\n    height: 100vh;\r\n`;\r\n\r\nclass User extends Component {\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.onFetchUser(this.props.location.state);\r\n    }\r\n    render() {\r\n        return (\r\n            <StyledDiv>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"col1\">User ID</th>\r\n                                <th className=\"col1\">ID</th>\r\n                                <th className=\"col2\">Title</th>\r\n                                <th className=\"col3\">Body</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"col1\">{this.props.user.userId}</td>\r\n                                <td className=\"col1\">{this.props.user.id}</td>\r\n                                <td className=\"col2\">{this.props.user.title}</td>\r\n                                <td className=\"col3\">{this.props.user.body}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <Link className=\"back\" to={'../'}>Back</Link>\r\n            </StyledDiv>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        errors: state.errors,\r\n        isLoading: state.is\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchUser: (id) => dispatch(fetchUser(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import React, { Component } from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport Users from './Users/Users';\r\nimport User from './User/User';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n          <header className=\"app-header\">\r\n            <ul>\r\n              <li>Dummy 1</li>\r\n              <li>Dummy 2</li>\r\n              <li>Dummy 3</li>\r\n              <li>Dummy 4</li>\r\n            </ul> \r\n          </header>\r\n          {this.spinner}\r\n          <Route path=\"/users/\" exact component={Users} />\r\n          <Route path=\"/users/:id\" exact component={User} />\r\n          <Route path=\"/\" component={Users} />\r\n        </div>\r\n      \r\n    );\r\n  }\r\n};\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionTypes from './actions/actions';\r\n\r\nconst intitialState = {\r\n    users: [],\r\n    user: {},\r\n    isLoading: true,\r\n    errors : null\r\n};\r\n\r\nconst reducer = (state = intitialState, payload) => {\r\n    console.log(payload);\r\n    switch(payload.type) {\r\n        case actionTypes.SET_USERS : \r\n        return {\r\n            ...state,\r\n            users: payload.users,\r\n            isLoading: false,\r\n        }\r\n        case actionTypes.SET_USER: return {\r\n            ...state,\r\n            ...state.users,\r\n            ...state.isLoading = false,\r\n            user: payload.user,\r\n            errors: null\r\n        }\r\n        case actionTypes.FETCH_USER: return {\r\n            ...state,\r\n            ...state.users,\r\n            isLoading: false\r\n        }\r\n        case actionTypes.ADD_LIKE : return Object.assign({}, state, {\r\n            users: state.users.map(\r\n                (user) =>{\r\n                    if(user.id === payload.user.id) {\r\n                        return Object.assign({}, user, {\r\n                            likes: payload.user.likes+1\r\n                        })\r\n                    }\r\n                    return user\r\n                }\r\n            )\r\n        });\r\n        case actionTypes.REMOVE_LIKE : return Object.assign({}, state, {\r\n            users: state.users.map(\r\n                (user) =>{\r\n                    if(user.id === payload.user.id) {\r\n                        return Object.assign({}, user, {\r\n                            likes: payload.user.likes-1\r\n                        })\r\n                    }\r\n                    return user\r\n                }\r\n            )\r\n        });\r\n        case actionTypes.ADD_DISLIKE: return Object.assign({}, state, {\r\n            users: state.users.map(\r\n                (user) =>{\r\n                    if(user.id === payload.user.id) {\r\n                        return Object.assign({}, user, {\r\n                            dislikes: payload.user.dislikes+1\r\n                        })\r\n                    }\r\n                    return user\r\n                }\r\n            )\r\n        });\r\n        case actionTypes.REMOVE_DISLIKE: return Object.assign({}, state, {\r\n            users: state.users.map(\r\n                (user) =>{\r\n                    if(user.id === payload.user.id) {\r\n                        return Object.assign({}, user, {\r\n                            dislikes: payload.user.dislikes-1\r\n                        })\r\n                    }\r\n                    return user\r\n                }\r\n            )\r\n        });\r\n        default: return state;\r\n}\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'; \r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './store/reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nconsole.log(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter> \r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}